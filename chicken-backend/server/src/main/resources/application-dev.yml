hanye:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/chicken_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
    username: root
    password: 2004

  redis:
    #    enable: false
    host: localhost
    port: 6379

    password:

    database: 1
  wechat:
    # 下面这两句改成自己的，不然小程序登不上！
    appid: wx6b9bdc2036a4dd99
    secret: 265784ffb95950b5a1a256051044f2e3
    # 别人的文件，由于没企业商户号，这里只是摆设
    mchid: 1561414331
    mchSerialNo: 4B3B3DC35414AD50B1B755BAF8DE9CC7CF407606
    privateKeyFilePath: C:\software\apiclient_key.pem
    apiV3Key: CZBK51236435wxpay435434323FFDuv3
    weChatPayCertFilePath: C:\software\wechatpay_166D96F876F45C7D07CE98952A96EC980368ACFC.pem
    notifyUrl: https://9ea0754.r19.cpolar.top/notify/paySuccess
    refundNotifyUrl: https://9ea0754.r19.cpolar.top/notify/refundSuccess

# Spring Boot 配置
spring:
  sql:
    init:
      # 指定建表脚本和数据脚本位置（按顺序执行）
      schema-locations: 
        - classpath:sql/chicken_db_schema.sql
      data-locations:
        - classpath:sql/chicken_db_data.sql
      # 执行模式：always表示每次启动都检查执行
      mode: always
      # 如果脚本执行出错继续执行（由于使用了if not exists，建议设为true）
      continue-on-error: true
      # 字符编码
      encoding: UTF-8
      # 脚本分隔符
      separator: ;
      # 执行顺序：先执行schema再执行data
      schema-before-data: true
  datasource:
    # 使用自定义数据源配置
    driver-class-name: ${hanye.datasource.driver-class-name}
    url: ${hanye.datasource.url}
    username: ${hanye.datasource.username}
    password: ${hanye.datasource.password}

# MyBatis 配置
mybatis:
  configuration:
    map-underscore-to-camel-case: true
    lazy-loading-enabled: true
    cache-enabled: true
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: fun.cyhgraph.pojo.entity

# 日志配置
logging:
  level:
    fun.cyhgraph: debug
    org.springframework.jdbc: debug
    # 显示 SQL 初始化过程的日志
    org.springframework.boot.autoconfigure.sql.init: debug
